sub$SB.3<-sub$SB.2
sub$AS.3<-sub$AS.2
CV<-c(cv(sub$HL.3,na.rm=TRUE),
cv(sub$HB.3,na.rm=TRUE),
cv(sub$REL.3,na.rm=TRUE),
cv(sub$LEL.3,na.rm=TRUE),
cv(sub$SB.3,na.rm=TRUE),
cv(sub$AS.3,na.rm=TRUE)
)
sub$HL.3<-(sub$HL+sub$HL.1)/2
sub$HB.3<-(sub$HB+sub$HB.1)/2
sub$REL.3<-(sub$REL+sub$REL.1)/2
sub$LEL.3<-(sub$LEL+sub$LEL.1)/2
sub$SB.3<-(sub$SB+sub$SB.1)/2
sub$AS.3<-(sub$AS+sub$AS.1)/2
sub$HL.3<-sub$HL.2
sub$HB.3<-sub$HB.2
sub$REL.3<-sub$REL.2
sub$LEL.3<-sub$LEL.2
sub$SB.3<-sub$SB.2
sub$AS.3<-sub$AS.2
CV<-c(cv(sub$HL.3,na.rm=TRUE),
cv(sub$HB.3,na.rm=TRUE),
cv(sub$REL.3,na.rm=TRUE),
cv(sub$LEL.3,na.rm=TRUE),
cv(sub$SB.3,na.rm=TRUE),
cv(sub$AS.3,na.rm=TRUE)
)
names(CV)<-c("HL","HB","REL","LEL","SB","AS")
CV
meanSB<-mean(sub$SB.3,na.rm=TRUE)
sdSB<-sd(sub$SB.3,na.rm = TRUE)
lowerSB<-meanSB-2*sdSB
upperSB<-meanSB+2*sdSB
rangeSB<-c(lowerSB,upperSB)
rangeSB ### THIS WILL BE THE ANSWER
meanHLm<-mean(males$HL.3,na.rm = TRUE)
meanHLf<-mean(females$HL.3,na.rm = TRUE)
sdHLm<-sd(males$HL.3,na.rm = TRUE)
sdHLf<-sd(females$HL.3,na.rm = TRUE)
meanHBm<-mean(males$HB.3,na.rm = TRUE)
meanHBf<-mean(females$HB.3,na.rm = TRUE)
sdHBm<-sd(males$HB.3,na.rm = TRUE)
sdHBf<-sd(females$HB.3,na.rm = TRUE)
meanHLf + sdHLf > meanHLm #female HL within 1 sd of male mean
meanHLm - sdHLm < meanHLf #male HL within 1 sd of female mean
meanHBf + sdHBf > meanHBm #female HB within 1 sd of male mean
meanHBm - sdHBm < meanHBf #male HB wihtin 1 sd of female mean
meanHLm<-mean(males$HL.3,na.rm = TRUE)
females<-sub[sub$sex=="F"|sub$sex=="f",]
males<-sub[sub$sex=="M"|sub$sex=="m",]
meanHLm<-mean(males$HL.3,na.rm = TRUE)
meanHLf<-mean(females$HL.3,na.rm = TRUE)
sdHLm<-sd(males$HL.3,na.rm = TRUE)
sdHLf<-sd(females$HL.3,na.rm = TRUE)
meanHBm<-mean(males$HB.3,na.rm = TRUE)
meanHBf<-mean(females$HB.3,na.rm = TRUE)
sdHBm<-sd(males$HB.3,na.rm = TRUE)
sdHBf<-sd(females$HB.3,na.rm = TRUE)
meanHLf + sdHLf > meanHLm #female HL within 1 sd of male mean
meanHLm - sdHLm < meanHLf #male HL within 1 sd of female mean
meanHBf + sdHBf > meanHBm #female HB within 1 sd of male mean
meanHBm - sdHBm < meanHBf #male HB wihtin 1 sd of female mean
cephM<-(males$HB.3*100)/males$HL.3
cephF<-(females$HB.3*100)/females$HL.3
meanCm<-mean(cephM)
meanCf<-mean(cephF)
sdCm<-sd(cephM)
sdCf<-sd(cephF)
meanCm + sdCm > meanCf #male cephalic index within 1 sd of female mean
meanCf - sdCf < meanCm #female cephalic index within 1 sd of male mean
a<-read.csv(file.choose(),header = TRUE)
sub<-a[1:49,]
library(raster)
sub$HL.3<-sub$HL.2
sub$HB.3<-sub$HB.2
sub$REL.3<-sub$REL.2
sub$LEL.3<-sub$LEL.2
sub$SB.3<-sub$SB.2
sub$AS.3<-sub$AS.2
CV<-c(cv(sub$HL.3,na.rm=TRUE),
cv(sub$HB.3,na.rm=TRUE),
cv(sub$REL.3,na.rm=TRUE),
cv(sub$LEL.3,na.rm=TRUE),
cv(sub$SB.3,na.rm=TRUE),
cv(sub$AS.3,na.rm=TRUE)
)
names(CV)<-c("HL","HB","REL","LEL","SB","AS")
CV
max(CV) ### THIS WILL BE THE ANSWER
CV == max(CV)
a<-read.csv(file.choose(),header = TRUE)
sub<-a[1:49,]
library(raster)
sub$HL.3<-sub$HL.2
sub$HB.3<-sub$HB.2
sub$REL.3<-sub$REL.2
sub$LEL.3<-sub$LEL.2
sub$SB.3<-sub$SB.2
sub$AS.3<-sub$AS.2
CV<-c(cv(sub$HL.3,na.rm=TRUE),
cv(sub$HB.3,na.rm=TRUE),
cv(sub$REL.3,na.rm=TRUE),
cv(sub$LEL.3,na.rm=TRUE),
cv(sub$SB.3,na.rm=TRUE),
cv(sub$AS.3,na.rm=TRUE)
)
names(CV)<-c("HL","HB","REL","LEL","SB","AS")
CV
max(CV) ### THIS WILL BE THE ANSWER
CV == max(CV)
females<-sub[sub$sex=="F"|sub$sex=="f",]
males<-sub[sub$sex=="M"|sub$sex=="m",]
meanHLm<-mean(males$HL.3,na.rm = TRUE)
meanHLf<-mean(females$HL.3,na.rm = TRUE)
sdHLm<-sd(males$HL.3,na.rm = TRUE)
sdHLf<-sd(females$HL.3,na.rm = TRUE)
meanHBm<-mean(males$HB.3,na.rm = TRUE)
meanHBf<-mean(females$HB.3,na.rm = TRUE)
sdHBm<-sd(males$HB.3,na.rm = TRUE)
sdHBf<-sd(females$HB.3,na.rm = TRUE)
meanHLf + sdHLf > meanHLm #female HL within 1 sd of male mean
meanHLm - sdHLm < meanHLf #male HL within 1 sd of female mean
meanHBf + sdHBf > meanHBm #female HB within 1 sd of male mean
meanHBm - sdHBm < meanHBf #male HB wihtin 1 sd of female mean
grades<-c(95,92,90,95,85,89,83,87,86,85,88.5,77,79,79,68,62,60,49)
mean(grades)
sd(grades)
var(grades)
sqrt(var(grades))
max(grades)
min(grades)
median(grades)
mode(grades)
grades<-c(97,92,94,91,98,94,83,89,80,84,85.5,83,87.5,74,66.5,41.5)
mean(grades)
median(grades)
sd(grades)
mean(grades-min(grades))
mean(grades)
grades2<-c(97,92,94,91,98,94,83,89,80,84,85.5,83,87.5,74,66.5)
mean(grades2)
sd(grades2)
a<-read.csv(file.choose(),header = TRUE)
sub<-a[1:49,]
library(raster)
sub$HL.3<-sub$HL.2
sub$HB.3<-sub$HB.2
sub$REL.3<-sub$REL.2
sub$LEL.3<-sub$LEL.2
sub$SB.3<-sub$SB.2
sub$AS.3<-sub$AS.2
CV<-c(cv(sub$HL.3,na.rm=TRUE),
cv(sub$HB.3,na.rm=TRUE),
cv(sub$REL.3,na.rm=TRUE),
cv(sub$LEL.3,na.rm=TRUE),
cv(sub$SB.3,na.rm=TRUE),
cv(sub$AS.3,na.rm=TRUE)
)
names(CV)<-c("HL","HB","REL","LEL","SB","AS")
CV
max(CV) ### THIS WILL BE THE ANSWER
CV == max(CV)
sub$HL.3
mean(sub$HL.3)
mean(sub$HL.3,na.rm=T)
names(CV)<-c("HL","HB","REL","LEL","SB","AS")
CV
meanSB<-mean(sub$SB.3,na.rm=TRUE)
sdSB<-sd(sub$SB.3,na.rm = TRUE)
lowerSB<-meanSB-2*sdSB
upperSB<-meanSB+2*sdSB
rangeSB<-c(lowerSB,upperSB)
rangeSB ### THIS WILL BE THE ANSWER
head(sub)
sub$HL.3<-(sub$HL+sub$HL.1)/2
sub$HB.3<-(sub$HB+sub$HB.1)/2
sub$REL.3<-(sub$REL+sub$REL.1)/2
sub$LEL.3<-(sub$LEL+sub$LEL.1)/2
sub$SB.3<-(sub$SB+sub$SB.1)/2
sub$AS.3<-(sub$AS+sub$AS.1)/2
sub$HL.3<-sub$HL.2
sub$HB.3<-sub$HB.2
sub$REL.3<-sub$REL.2
sub$LEL.3<-sub$LEL.2
sub$SB.3<-sub$SB.2
sub$AS.3<-sub$AS.2
sub$HL.3
sub$AS.3
mean(sub$AS.3)
a<-read.csv(file.choose(),header = TRUE)
sub<-a[1:49,]
library(raster)
hea(sub)
head(sub)
mpg
attach(mpg)
load(mpg)
data(mpg)
data(mtcars)
names(mtcars)
require(ggplot2)
?plot()
summary(mtcarss)
summary(mtcars)
(((3+2)*3)-6)/3
data(mtcars)
names(mtcars)
WorldPhones
class(names(mtcars))
class(WorldPhones)
data.frame(WorldPhones)
class(data.frame(WorldPhones))
x <- c(1, "R", TRUE)
class(x)
x <- as.vector(c(1, "R", TRUE))
class(x)
qplot(1:10,1:10)
qplot(1:10,1:120
)
age <- c(13, 15, 16, 16, 19, 20, 20, 21, 22, 22, 25, 25, 25, 25, 30, 33, 33, 35, 35, 35, 35, 36, 40, 45,46,52,70)
mean(age)
median(age)
mode(age)
the_mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
the_mode(age)
table(x)
table(age)
max(table(age))
table(max(table(age)))
summary(age)
fivenum(age)
require(ggplot2)
m <- ggplot(age)
qplot(age, geom="histogram", binwidth=1)
qplot(age, geom="histogram", binwidth=10)
max(table(age)) # mode = 25 and 35
table(age)
?search
search(mean)
search()
searchpaths()
age2<- c(23,23,27,27,39,41,47,49,50,52,54,54,56,57,58,58,60,61)
length(age2)
fat<- c(9.5,26.5,7.8,17.8,31.4,25.9,27.4,27.2,31.2,34.6,42.5,28.8,33.4,30.2,34.1,32.9,41.2,35.7)
length(fat)
table(mean(age2,fat))
mean(age2)
median(age2)
sd(age2)
mean(fat)
median(fat)
sd(fat)
x<-cbind(age2,fat)
x
plot(x$age2,x$fat)
x<-dataframe(x)
x<-data.frame(x)
plot(x$age2,x$fat)
p <- ggplot(x, aes(age2, fat))
p + geom_point()
qqplot(x$age2,x$fat)
require(ggplot2)
age <- c(13, 15, 16, 16, 19, 20, 20, 21, 22, 22, 25, 25, 25, 25, 30, 33, 33, 35, 35, 35, 35, 36, 40, 45,46,52,70)
mean(age)
median(age)
table(age)
max(table(age)) # mode = 25 and 35
summary(age)
fivenum(age)
qplot(age, geom="histogram", binwidth=10)
age2<- c(23,23,27,27,39,41,47,49,50,52,54,54,56,57,58,58,60,61)
fat<- c(9.5,26.5,7.8,17.8,31.4,25.9,27.4,27.2,31.2,34.6,42.5,28.8,33.4,30.2,34.1,32.9,41.2,35.7)
mean(age2)
median(age2)
sd(age2)
mean(fat)
median(fat)
sd(fat)
x<-cbind(age2,fat)
x<-data.frame(x)
p <- ggplot(x, aes(age2, fat))
p + geom_point()
qqplot(x$age2,x$fat)
qplot(x$age2,data=x,geom_boxplot())
boxplot(x$age2)
qplot(age2,data=x,geom_boxplot())
ggplot(data=x,aes(age2))+geom_boxplot()
ggplot(data=x,aes(age2,c(1:20)))+geom_boxplot()
qplot(y=x$age2, x= 1, geom = "boxplot")
x2<-rbind(age2,fat)
x2
rm(x2)
x
rep(10,10)
rep("james",10)
y<-c(rep("age",18),rep("fat_perc",18))
y
categ<-c(rep("age",18),rep("fat_perc",18))
rm(y)
values<-c(age2,fat)
x2<-cbind(categ,values)
x2
ggplot(data = x2, factor(categ),aes(values))
ggplot(data = x2, factor(categ),aes(values)) + geom_boxplot()
boxplot(age2)
boxplot(fat)
y <- rt(200, df = 5)
qqnorm(y); qqline(y, col = 2)
qqplot(y, rt(300, df = 5))
y
qqnorm(fat)
qqnorm(age2)
qqplot(qqnorm(age2),qqnorm(fat))
qqplot(x$age2,x$fat)
qqplot(x$age2,x$fat,xlab = age, ylab= fat_perc)
qqplot(x$age2,x$fat,xlab = 'age', ylab= 'fat_perc')
abline(0,1)
qqline(x$age2)
qqplot(x$age2,x$fat,xlab = 'age', ylab= 'fat_perc')
qqline(x$age2)
qqline(x$age2,x$fat)
qqplot(x$age2,x$fat,xlab = 'age', ylab= 'fat_perc',title(main=QQPLOt))
qqplot(x$age2,x$fat,xlab = 'age', ylab= 'fat_perc',title(main='QQPLOt'))
qqplot(x$age2,x$fat,xlab = 'age', ylab= 'fat_perc',title(main='Quantile Quantile Plot'))
boxplot(fat)
qqplot(x$age2,x$fat,xlab = 'age', ylab= 'fat_perc',title(main='Quantile Quantile Plot'))
qqplot(x$age2,x$fat,xlab = 'age', ylab= 'fat_perc',title(main='Quantile Quantile Plot'))
boxplot(age2)
boxplot(fat)
qqplot(x$age2,x$fat,xlab = 'age', ylab= 'fat_perc',title(main='Quantile Quantile Plot'))
qqline(x$age2,x$fat)
scale(x$age, center = TRUE, scale = TRUE)
mean(x$ag2)
mean(x$age2)
scale(x$age2, center = TRUE, scale = TRUE)
sd (x$age2)
zscore_age<- scale(x$age2, center = TRUE, scale = TRUE)
zscore_fat<- scale(x$fat, center = TRUE, scale = TRUE)
zscore_fat
cor(x$age2,x$fat)
cor(x$age2,x$age2)
cor(x$age2,x$fat)
age <- c(13, 15, 16, 16, 19, 20, 20, 21, 22, 22, 25, 25, 25, 25, 30, 33, 33, 35, 35, 35, 35, 36, 40, 45,46,52,70)
mean(age)
median(age)
summary(age)
qplot(age, geom="histogram", binwidth=10)
age2<
fat<- c(9.5,26.5,7.8,17.8,31.4,25.9,27.4,27.2,31.2,34.6,42.5,28.8,33.4,30.2,34.1,32.9,41.2,35.7)
mean(age2)
mean(fat)
median(age2)
median(fat)
sd(age2)
sd(fat)
x<-cbind(age2,fat)
x<-data.frame(x)
boxplot(age2)
boxplot(age2,title='age')
boxplot(age2,title(main = 'age'))
boxplot(age2)
title(main='age')
boxplot(fat)
title(main='fat_perc')
p <- ggplot(x, aes(age2, fat))
p + geom_point()
p + geom_point() + xlab('age') + ylab('fat_perc')
p + geom_point() + xlab('age') + ylab('fat_perc') +ggtitle('scatter')
qqline(x$age2,x$fat)
qqplot(x$age2,x$fat,xlab = 'age', ylab= 'fat_perc',title(main='Quantile Quantile Plot'))
qqplot(x$age2,x$fat,xlab = 'age', ylab= 'fat_perc',title(main='Quantile Quantile Plot'))
x<-data.frame(x)
qqplot(x$age2,x$fat,xlab = 'age', ylab= 'fat_perc',title(main='Quantile Quantile Plot'))
qqplot(x$age2,x$fat,xlab = 'age', ylab= 'fat_perc')
title(main='quantile quantile plot')
zscore_age<- scale(x$age2, center = TRUE, scale = TRUE)
zscore_age
cbind(zscore_age,zscore_fat)
cor(x$age2,x$fat)
gulf <- c(1500,6800,1700)
parfreq<- gulf/sum(gulf)
parfreq
p<-parfreq[1]
p<-parfreq[1]+(.5*parfreq[2])
q<-parfreq[3]+(.5*parfreq[2])
p^2
2*p*q
q^2
p2<-p^2
pq2<-2*p*q
q2<-q^2
expected<-(p2,pq2,p2)
expected<-c(p2,pq2,p2)
ecount<-expect*sum(gulf)
ecount<-expected*sum(gulf)
((gulf-ecount)^2)/ecount
sum(val)
val<-((gulf-ecount)^2)/ecount
sum(val)
gulf <- c(1500,6800,1700)
parfreq<- gulf/sum(gulf)
parfreq
p<-parfreq[1]+(.5*parfreq[2])
q<-parfreq[3]+(.5*parfreq[2])
p2<-p^2
pq2<-2*p*q
q2<-q^2
expected<-c(p2,pq2,p2)
ecount<-expected*sum(gulf)
val<-((gulf-ecount)^2)/ecount
sum(val)
ecount
help.start()
require(ggplot2)
attach(diamands)
attach(diamonds)
qlot(price, data = diamonds, geo = "density", color = "cut")
qplot(price, data = diamonds, geo = "density", color = "cut")
qplot(cara,price,data=diamonds)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,geom= "heatmap"
)
qplot(carat,price,data=diamonds, color = blue)
qplot(carat,price,data=diamonds, color = "blue")
qplot(data, unemploy, data=economics)
log(1/2)
log(.5)
(-2/5)*log(2/5)
(-3/5)*log(3/5)
(-2/5)*log(2/5)+(-3/5)*log(3/5)
log(2/5)
-0.9162907*(-2/5)
log(2/5,base =2)
log(2/5,base =1)
log(2/5,base =3)
log(2/5,base =2)
-1.321928*(2/5)
-1.321928*(-2/5)
(-2/5)*log(2/5,base=2)+((-3/5)*log(3/5,base=2))
log(1,base=2)
2^0
log(0,base=2)
AA<- 100/350
Aa<- 150/350
aa<- 100/350
AA
aa
Aa
p<- AA + (.5*Aa)
q<- aa + (.5*Aa)
p
q
AA<- 20/100
Aa<- 35/100
aa<- 45/100
p<- AA + (.5*Aa)
q<- aa + (.5*Aa)
p
q
p^2
2*p*q
q^2
p^2+(2*p*q)=q^2
p^2+(2*p*q)+q^2
sqqrt(.81)
sqrt(.81)
.55^2
2*.55*.45
.45^2
0.3025+0.495+0.2025
.5^10
setwd(dir = "Desktop/Spring 2FALSETRUE6/Data Mining/Assignments/")
library(arules)
library(arulesViz)
library(arulesViz)
data <- paste(
"# this is some test data",
"M, O, N, K, E, Y",
"D, O, N, K, E, Y",
"M, A, K, E",
"M, U, C, K, Y",
"C, O, O, K, I, E",
sep="\n")
cat(data)
write(data, file = "demo_basket")
tr <- read.transactions("demo_basket", format = "basket", sep=",", skip = 1,  rm.duplicates = TRUE)
inspect(tr)
rules <- apriori(tr, parameter= list(supp=0.6, conf=0.8))
inspect(rules)
data
cat(data)
## read demo data (skip comment line)
tr <- read.transactions("demo_basket", format = "basket", sep=",", skip = 1,  rm.duplicates = TRUE)
inspect(tr)
rules <- apriori(tr, parameter= list(supp=0.6, conf=0.8))
inspect(rules)
setwd(dir = 'Desktop/Spring 2016/Neander_Trauma/')
sport <- read.csv('Data/NEISS/sport_final.csv')
libray(plyr)
library(plyr)
library(ggplot2)
count(sport, body_part)
count(sport, 'body_part')
aggregate(numeric(nrow(sport)), sport[c("body_part", "prod1")], length)
aggregate(numeric(nrow(sport)), sport[c("body_part", "prod1")], sum)
aggregate(numeric(nrow(sport)), sport[c("body_part", "prod1")], length)
count(sport, 'body_part')
count(sport, 'prod1')
