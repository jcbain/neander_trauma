q^2
p2<-p^2
pq2<-2*p*q
q2<-q^2
expected<-(p2,pq2,p2)
expected<-c(p2,pq2,p2)
ecount<-expect*sum(gulf)
ecount<-expected*sum(gulf)
((gulf-ecount)^2)/ecount
sum(val)
val<-((gulf-ecount)^2)/ecount
sum(val)
gulf <- c(1500,6800,1700)
parfreq<- gulf/sum(gulf)
parfreq
p<-parfreq[1]+(.5*parfreq[2])
q<-parfreq[3]+(.5*parfreq[2])
p2<-p^2
pq2<-2*p*q
q2<-q^2
expected<-c(p2,pq2,p2)
ecount<-expected*sum(gulf)
val<-((gulf-ecount)^2)/ecount
sum(val)
ecount
help.start()
require(ggplot2)
attach(diamands)
attach(diamonds)
qlot(price, data = diamonds, geo = "density", color = "cut")
qplot(price, data = diamonds, geo = "density", color = "cut")
qplot(cara,price,data=diamonds)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,geom= "heatmap"
)
qplot(carat,price,data=diamonds, color = blue)
qplot(carat,price,data=diamonds, color = "blue")
qplot(data, unemploy, data=economics)
log(1/2)
log(.5)
(-2/5)*log(2/5)
(-3/5)*log(3/5)
(-2/5)*log(2/5)+(-3/5)*log(3/5)
log(2/5)
-0.9162907*(-2/5)
log(2/5,base =2)
log(2/5,base =1)
log(2/5,base =3)
log(2/5,base =2)
-1.321928*(2/5)
-1.321928*(-2/5)
(-2/5)*log(2/5,base=2)+((-3/5)*log(3/5,base=2))
log(1,base=2)
2^0
log(0,base=2)
AA<- 100/350
Aa<- 150/350
aa<- 100/350
AA
aa
Aa
p<- AA + (.5*Aa)
q<- aa + (.5*Aa)
p
q
AA<- 20/100
Aa<- 35/100
aa<- 45/100
p<- AA + (.5*Aa)
q<- aa + (.5*Aa)
p
q
p^2
2*p*q
q^2
p^2+(2*p*q)=q^2
p^2+(2*p*q)+q^2
sqqrt(.81)
sqrt(.81)
.55^2
2*.55*.45
.45^2
0.3025+0.495+0.2025
.5^10
setwd(dir = "Desktop/Spring 2FALSETRUE6/Data Mining/Assignments/")
library(arules)
library(arulesViz)
library(arulesViz)
data <- paste(
"# this is some test data",
"M, O, N, K, E, Y",
"D, O, N, K, E, Y",
"M, A, K, E",
"M, U, C, K, Y",
"C, O, O, K, I, E",
sep="\n")
cat(data)
write(data, file = "demo_basket")
tr <- read.transactions("demo_basket", format = "basket", sep=",", skip = 1,  rm.duplicates = TRUE)
inspect(tr)
rules <- apriori(tr, parameter= list(supp=0.6, conf=0.8))
inspect(rules)
data
cat(data)
## read demo data (skip comment line)
tr <- read.transactions("demo_basket", format = "basket", sep=",", skip = 1,  rm.duplicates = TRUE)
inspect(tr)
rules <- apriori(tr, parameter= list(supp=0.6, conf=0.8))
inspect(rules)
install.packages('caret')
library('klar')
library('caret')
library('caret')
install.packages('pbkrtest')
install.packages("pbkrtest")
library('klar')
library('caret')
install.packages('klar')
install.packages('klaR')
library('klaR')
library('caret')
x = iris
x
months <- rep(1:12,3)
months <- rep(1:12,3)
months
months <- rep(1:12,2)
deaths<- c(1,2,3,4,5,6,6,5,4,3,2,1,1,2,3,4,5,6,6,5,4,3,2,1)
cbind(months,deaths)
sum(deaths[1:12])
sum(deaths[7:18])
deaths<- c(1,2,3,4,5,6,6,5,4,3,2,3,1,2,3,4,5,6,6,5,4,3,2,1)
cbind(months,deaths)
sum(deaths[1:12])
sum(deaths[1:12])
sum(deaths[7:18])
deaths<- c(1,2,3,4,5,6,6,5,4,3,2,3,1,2,3,5,5,6,6,5,4,3,2,1)
cbind(months,deaths)
deaths<- c(1,2,3,4,5,6,6,5,4,3,2,3,1,2,3,5,5,6,6,5,4,3,2,1)
sum(deaths[1:12])
sum(deaths[7:18])
mm<-260;mn<-1000;nn<-400
mm<-260;mn<-1000;nn<-400
fmm<-(mm/(mm+mn+nn));fmn<-(mn/(mm+mn+nn));fnn<-(nn/(mm+mn+nn))
p<-fmm+(.5*fmn);q<-fnn+(.5*fmn)
p2<-p^2;twopq<-2*p*q;q2<-q^2
p<-0.65;q<-0.35
fdomPhen<- p^2 + 2*p*q
domPhen<-190/1000
recPhen<-810/1000
q2<-recPhen
domPhen<-190/1000
recPhen<-810/1000
q2<-recPhen
q<-sqrt(q2);p<-1-q
twopq<-2*p*q;p2<-p^2
domPhen<-190/1000
recPhen<-810/1000
q2<-recPhen
q<-sqrt(q2);p<-1-q
twopq<-2*p*q;p2<-p^2
p<-0.95;q<-0.05
p2<-p^2;twopq<-2*p*q;q2<-q^2
flat<-p2*100;mod<-twopq*100;fizzy<-q2*100
fizzy<-p2*100;mod<-twopq*100;flat<-q2*100
eFiz<-fizzy*2000;eMod<-mod*2000;eFlat<-flat*2000
p<-0.95;q<-0.05
p2<-p^2;twopq<-2*p*q;q2<-q^2
fizzy<-p2*100;mod<-twopq*100;flat<-q2*100
## b ## 1 point
oFiz<-1000;oMod<-100;oFlat<-900
expected<-c(fizzy<-p2*100;mod<-twopq*100;flat<-q2*100)
exp<-c(fizzy,mod,flat)
obs<-c(oFiz,oMod,oFlat)
sum((((obs-exp)^2)/obs))
chi2<-sum((((obs-exp)^2)/obs))
exp
obs
fizzy<-p2*100;mod<-twopq*100;flat<-q2*100
eFiz<-p2*2000;eMod<-twopq*2000;eFlat<-q2*2000
exp<-c(eFiz,eMod,eFlat)
obs<-c(oFiz,oMod,oFlat)
chi2<-sum((((obs-exp)^2)/obs))
chi2<-sum((((obs-exp)^2)/exp))
obs
exp
fmm<-.25;fmn<-.60;fnn<-.15
fmm<-.25;fmn<-.60;fnn<-.15
p<-fmm + (.5*fmn); q<-fnn + (.5*fmn)
obs<-c(fmm*3000,fmn*3000,fnn*3000)
p2<-p^2;twopq<-2*p*q;q2<-q^2
exp<-c(p2*3000,2pq*3000,q2*3000)
exp<-c(p2*3000,twopq*3000,q2*3000)
chi2<-sum((((obs-exp)^2)/exp))
sQQ<-20;sQR<-35;sRR<-45
rQQ<-30;rQR<-65;rRR<-5
library(ggplot2)
?mpg
data <- mpg
mpg
data
qplot(disp,hwy,data=mpg)
qplot(disp;,hwy,data=mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color = class)
qplot(displ,hwy,data=mpg,size= class)
qplot(displ,hwy,data=mpg,size= class, color = class)
qplot(displ,hwy,data=mpg,size= class, color = class, shape = class)
qplot(displ,hwy,data=mpg,size= class, color = class, alpha = class)
qplot(displ,hwy,data=mpg, color = class, alpha = class)
qplot(displ,hwy,data=mpg, color = class, alpha = class + facet_grid(.~cyl))
qplot(displ,hwy,data=mpg) + facet_grid(.~cyl)
qplot(displ,hwy,data=mpg = color = class) + facet_grid(.~cyl)
qplot(displ,hwy,data=mpg ,color = class) + facet_grid(.~cyl)
qplot(displ,hwy,data=mpg ,color = class) + facet_grid(.~drv)
qplot(displ,hwy,data=mpg ,color = class) + facet_grid(drv~cyl)
qplot(displ,hwy,data=mpg ,color = class) + facet_wrap(drv~cyl)
qplot(displ,hwy,data=mpg ,color = class) + facet_grid(drv~cyl)
summary(iris)
qplot(Sepal.Length,Sepal.Width, data = iris, color = Species)
qplot(Sepal.Length,Sepal.Width, data = iris, color = Species)+ facet_grid(Petal.Length~Petal.Width)
qplot(displ,hwy,data=mpg ,color = class, geom = 'smooth') + facet_grid(drv~cyl)
qplot(displ,hwy,data=mpg ,color = class, geom = 'smooth')
qplot(displ,hwy,data=mpg ,color = class, geom = 'smooth') + facet_grid(class)
qplot(displ,hwy,data=mpg ,color = class, geom = 'smooth') + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = 'smooth', geom= 'point') + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = 'point', ) + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = 'smooth', ) + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = 'smooth' ) + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = ('point','smooth') ) + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = c('point','smooth') ) + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = c('point','boxplot') ) + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = c('point','boxplot') )# + facet_grid(class~.)
qplot(class,hwy,data=mpg ,color = class, geom = c('point','boxplot') )# + facet_grid(class~.)
qplot(reorder(class,hwy),class,hwy,data=mpg ,color = class, geom = c('point','boxplot') )# + facet_grid(class~.)
qplot(class,hwy,data=mpg ,color = class, geom = c('point','boxplot') )# + facet_grid(class~.)
qplot(class,hwy,data=mpg ,color = class,reorder(class,hwy), geom = c('point','boxplot') )# + facet_grid(class~.)
qplot(class,hwy,data=mpg ,color = class,reorder(hwy,class), geom = c('point','boxplot') )# + facet_grid(class~.)
qplot(class,hwy,data=mpg ,color = class,reorder(hwy,class), geom = 'boxplot' )# + facet_grid(class~.)
qplot(class,hwy,data=mpg ,color = class,reorder(mpg$hwy,mpg$class), geom = 'boxplot' )# + facet_grid(class~.)
qplot(class,hwy,data=mpg ,color = class, geom = 'boxplot' )# + facet_grid(class~.)
?reorder
qplot(reorder(hwy, FUN = median),class,hwy,data=mpg ,color = class, geom = 'boxplot' )# + facet_grid(class~.)
qplot(reorder(class,hwy, FUN = median),hwy,data=mpg ,color = class, geom = 'boxplot' )# + facet_grid(class~.)
qplot(reorder(class,hwy, FUN = mean),hwy,data=mpg ,color = class, geom = 'boxplot' )# + facet_grid(class~.)
qplot(reorder(class,hwy, FUN = sd),hwy,data=mpg ,color = class, geom = 'boxplot' )# + facet_grid(class~.)
qplot(reorder(class,-hwy, FUN = sd),hwy,data=mpg ,color = class, geom = 'boxplot' )# + facet_grid(class~.)
qplot(reorder(class,hwy, FUN = sd),hwy,data=mpg ,color = class, geom = 'boxplot' )# + facet_grid(class~.)
qplot(hwy,data=mpg,binwidth = 1)
qplot(hwy,data=mpg,binwidth = 2)
qplot(hwy,data=mpg,binwidth = 1)
qplot(carat, data = diamonds)
qplot(depth, data = diamonds)
qplot(depth, data = diamonds, binwidth = .1)
qplot(depth, data = diamonds, binwidth = .2)
qplot(depth, data = diamonds, binwidth = .2,color = cut)
qplot(depth, data = diamonds, binwidth = .2,fill = cut)
qplot(depth, data = diamonds, binwidth = .2,color = 'blue')
qplot(depth, data = diamonds, binwidth = .2,color = i('blue'))
qplot(depth, data = diamonds, binwidth = .2,color = I('blue'))
qplot(depth, data = diamonds, binwidth = .2,color = I('green'))
qplot(depth, data = diamonds, binwidth = .2,color = I('green'),fill = I('red'))
qplot(depth, data = diamonds, binwidth = .2,color = I('white'),fill = I('black'))
qplot(depth, data = diamonds, binwidth = .2,color = I('black'),fill = I('white'))
qplot(data = economics, aes(date,unemploy)) + geom_line()
economics
qplot(data = economics, aes(x=date,y=unemploy)) + geom_line()
names(economics)
summary(economics)
qplot(economics, x=date,y=unemploy)
qplot(data=economics, x=date,y=unemploy)
qplot(data=economics, x=date,y=unemploy) + geom_line()
getwd()
pl<-qplot(data=economics, x=date,y=unemploy) + geom_line()
ggsave('Desktop/plot.pdf', plot= pl)
summary(diamonds)
ggplot(data = diamonds, aes(x = color)) + geom_bar(color = cut)
ggplot(data = diamonds, x=color + geom_bar(color = cut)
ggplot(data = diamonds, x=color) + geom_bar(color = cut)
ggplot(data = diamonds, x=color) + geom_bar(color = cut)
qplot(x = color, data = diamonds)
qplot(x = color, data = diamonds, color = cut)
qplot(x = color, data = diamonds, color = cut, position = 'stack')
qplot(x = color, data = diamonds, color = cut, position = 'dodge')
qplot(x = color, data = diamonds, color = cut) + position_dodge()
ggplot(diamonds,aes(factor(color),fill = factor(cut))) + geom_bar(position='dodge')
ggplot(diamonds,aes(factor(color),fill = factor(cut))) + geom_bar(position='stack')
ggplot(diamonds,aes(factor(color),fill = factor(cut))) + geom_bar(position='identity')
ggplot(diamonds,aes(factor(color),fill = factor(cut))) + geom_bar(position='fill')
ggplot(diamonds,aes(factor(color),fill = factor(cut))) + geom_bar(position=c('fill','dodge'))
ggplot(diamonds,aes(factor(color),fill = factor(cut))) + geom_bar(position='dodge')
install.packages('plotly')
library(plotly)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity)), size = 4) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
(gg <- ggplotly(p))
(gg <- ggplotly(p))
gg
ggplotly(p)
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity))) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
ggplotly(p)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
library(ggplot2)
library(plotly)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
names(diamonds)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = depth)
grades<-c(98,49,83,96,99,81,89,87,94,76,65,78,91,82,82,100)
mean(grades)
sd(grades)
hist(grades)
grades2<-c(87,92,98,96,82,96,98,23,63,96,89,72,91,58,84,82,77)
mean(grades2)
sd(grades2)
hist(grades2)
grades<-c(98,49,83,96,99,81,89,87,94,76,65,78,91,82,82,100)
gradesam<-c(98,49,83,96,99,81,89,87,94,76,65,78,91,82,82,100)
mean(gradesam)
mean(gradespm)
gradespm<-c(87,92,98,96,82,96,98,23,63,96,89,72,91,58,84,82,77)
mean(gradespm)
median(gradesam)
sd(gradesam)
sd(gradesam)^2
am<-rep('am',16)
pm<-rep('pm',length(gradespm))
am<-rep('am',length(gradesam))
class<- rbind(am,pm)
class<- c(am,pm)
class
grades<- c(gradesam,gradespm)
midterm<-cbind(class,grades)
midterm
midterm<-as.data.frame(cbind(class,grades))
midterm
ggplot(data=midterm,aes(x=grades, colour=class)) +geom_density()
library(ggplot2)
ggplot(data=midterm,aes(x=grades, colour=class)) +geom_density()
ggplot(data=midterm,aes(x=grades, colour=class)) +geom_hist()
ggplot(data=midterm,aes(x=grades, colour=class)) +geom_histogram()
ggplot(data=midterm,aes(x=grade)) +geom_density()
ggplot(data=midterm,aes(x=grades)) +geom_density()
ggplot(data=midterm,aes(x=grades)) +stat_density()
ggplot(data=midterm,aes(x=grades)) +stat_density(aes(colour=class))
ggplot(data=midterm,aes(grades)) +stat_density(aes(colour=class))
ggplot(data=midterm,aes(grades)) +stat_histogram(aes(colour=class))
ggplot(data=midterm,aes(grades)) +geom_histogram(aes(colour=class))
midterm$grades<-as.numeric(midterm$grades)
ggplot(data=midterm,aes(grades)) +geom_histogram(aes(colour=class))
ggplot(data=midterm,aes(grades)) +geom_density(aes(colour=class))
ggplot(data=midterm,aes(grades)) +geom_density()
ggplot(data=midterm,aes(grades)) +geom_histogram()
midterm
gradesam<-c(98,49,83,96,99,81,89,87,94,76,65,78,91,82,82,100)
am<-rep('am',length(gradesam))
gradespm<-c(87,92,98,96,82,96,98,23,63,96,89,72,91,58,84,82,77)
pm<-rep('pm',length(gradespm))
class<- c(am,pm)
grades<- c(gradesam,gradespm)
grades
midterm<-as.data.frame(cbind(class,grades))
midterm
midterm$grades<-as.numeric(midterm$grades)
midterm
gradesam<-c(98,49,83,96,99,81,89,87,94,76,65,78,91,82,82,100)
mean(gradesam)
range(gradesam)
100-49
median(gradesam)
sd(gradesam)
histogram(gradesam)
histo(gradesam)
hist(gradesam)
gradespm<-c(87,92,98,96,82,96,98,23,63,96,89,72,91,58,84,82,77)
grades<-as.data.frame(gradespm)
grades
ggplot(grades,aes(x = gradespm)) + geom_density()
library(ggplot2)
ggplot(grades,aes(x = gradespm)) + geom_density()
grades<- as.data.frame(c(gradesam,gradespm))
ggplot(grades,aes(x = gradespm)) + geom_density()
grades<- c(gradesam,gradespm)
total <- as.data.frame(grades)
ggplot(data=total,aes(x=grades)) +geom_density()
x <- as.vector(rnorm(10000))
d <- as.data.frame(x=x)
library(ggplot2)
p <- ggplot(data = d) + theme_bw() +
geom_density(aes(x=x, y = ..density..), color = 'black')
# new code is below
q5 <- quantile(x,.05)
q95 <- quantile(x,.95)
medx <- median(x)
x.dens <- density(x)
df.dens <- data.frame(x = x.dens$x, y = x.dens$y)
p + geom_area(data = subset(df.dens, x >= q5 & x <= q95),
aes(x=x,y=y), fill = 'blue') +
geom_vline(xintercept = medx)
v <- ggplot(data = total) + theme_bw()+
geom_density(aes(x=grades, y = ..density..), color = 'black')
v
q5 <- quantile(grades,.05)
q95 <- quantile(grades,.95)
medx <- median(grades)
x.dens <- density(grades)
df.dens <- data.frame(x = x.dens$x, y = x.dens$y)
v+geom_area(data = subset(df.dens, x >= q5 & x <= q95),
aes(x=x,y=y), fill = 'blue') +
geom_vline(xintercept = medx)
q10 <- quantile(grades,.10)
q90 <- quantile(grades,.90)
medx <- median(grades)
x.dens <- density(grades)
df.dens <- data.frame(x = x.dens$x, y = x.dens$y)
v+geom_area(data = subset(df.dens, x >= q10 & x <= q90),
aes(x=x,y=y), fill = 'blue') +
geom_vline(xintercept = medx)
q125 <- quantile(grades,.125)
q875 <- quantile(grades,.875)
medx <- median(grades)
x.dens <- density(grades)
df.dens <- data.frame(x = x.dens$x, y = x.dens$y)
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = 'blue') +
geom_vline(xintercept = medx)
v+geom_area(data = subset(df.dens, x >= q5 & x <= q95),
aes(x=x,y=y), fill = 'blue') +
geom_vline(xintercept = medx)
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx)
ggplot(data=total,aes(x=grades)) +geom_density(aes(fill = '#ff0000'))
v <- ggplot(data = total) + theme_bw()+
geom_density(aes(x=grades, y = ..density..), color = 'black')
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx)
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx) +
geom_vline(xintercept = 84.275)
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx) +
geom_vline(xintercept = 84.275, aes(fill = '#ff0000'))
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx) +
geom_vline(xintercept = 84.275, aes(colour = '#ff0000'))
geom_vline(xintercept = 84.275, coulour = 'blue' aes(colour = '#ff0000'))
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx) +
geom_vline(xintercept = 84.275, coulour = 'blue' )
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx) +
geom_vline(xintercept = 84.275, aes(coulour = 'blue') )
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx)
q10 <- quantile(grades,.10)
q1 <- quantile(grades,1)
medx <- median(grades)
x.dens <- density(grades)
df.dens <- data.frame(x = x.dens$x, y = x.dens$y)
v+geom_area(data = subset(df.dens, x >= q10 & x <= q1),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx)
gradespm<-c(87,92,98,96,82,96,98,23,63,96,89,72,91,58,84,82,77)
mean(gradespm)
median(gradespm)
sd(gradespm)
range(gradespm)
98-23
setwd(dir='Desktop/Spring 2016/Neander_Trauma/')
library(plyr)
# read in the data
df <- read.csv('Data/NEISS/sport_category_final.csv')
# create a contigency table
orig_table <- table(df$prod1,df$body_part)
# create a datafame from the contigency table (at least one that is intuitive)
tm<-as.data.frame.matrix(orig_table) # tm stands for table matrix
# create new columns based on body part combinations
head_neck <- tm$face + tm$neck + tm$head
shoulder_arm <- tm$`upper arm` + tm$`lower arm` + tm$shoulder + tm$elbow
hand <- tm$hand + tm$finger + tm$wrist
pelvis <- tm$`pubic region` + tm$hip # look up Berger femoral neck categorization and within the data
leg <- tm$knee + tm$`lower leg` + tm$`upper leg`
foot <- tm$foot + tm$toe + tm$ankle
trunk <- tm$`upper trunk` + tm$back
# combine columns into a new dataframe
final<-as.data.frame(cbind(head_neck,shoulder_arm,hand,pelvis,leg,foot,trunk))
rownames(final)<-rownames(tm) # index will be the activity name
# recreate data from Berger Trinkaus papers
neander_tot<-c(8,4,7,1,1,3,3)
nea_wo_djd<-c(7,4,7,1,0,3,1)
nea_wo_shan1<-c(6,4,5,1,1,3,1)
nea_wo_shan1_djd<-c(5,4,5,1,0,3,0)
write.csv(final,file = 'Data/contigency.csv' )
