chi2<-sum((((obs-exp)^2)/obs))
chi2<-sum((((obs-exp)^2)/exp))
obs
exp
fmm<-.25;fmn<-.60;fnn<-.15
fmm<-.25;fmn<-.60;fnn<-.15
p<-fmm + (.5*fmn); q<-fnn + (.5*fmn)
obs<-c(fmm*3000,fmn*3000,fnn*3000)
p2<-p^2;twopq<-2*p*q;q2<-q^2
exp<-c(p2*3000,2pq*3000,q2*3000)
exp<-c(p2*3000,twopq*3000,q2*3000)
chi2<-sum((((obs-exp)^2)/exp))
sQQ<-20;sQR<-35;sRR<-45
rQQ<-30;rQR<-65;rRR<-5
library(ggplot2)
?mpg
data <- mpg
mpg
data
qplot(disp,hwy,data=mpg)
qplot(disp;,hwy,data=mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color = class)
qplot(displ,hwy,data=mpg,size= class)
qplot(displ,hwy,data=mpg,size= class, color = class)
qplot(displ,hwy,data=mpg,size= class, color = class, shape = class)
qplot(displ,hwy,data=mpg,size= class, color = class, alpha = class)
qplot(displ,hwy,data=mpg, color = class, alpha = class)
qplot(displ,hwy,data=mpg, color = class, alpha = class + facet_grid(.~cyl))
qplot(displ,hwy,data=mpg) + facet_grid(.~cyl)
qplot(displ,hwy,data=mpg = color = class) + facet_grid(.~cyl)
qplot(displ,hwy,data=mpg ,color = class) + facet_grid(.~cyl)
qplot(displ,hwy,data=mpg ,color = class) + facet_grid(.~drv)
qplot(displ,hwy,data=mpg ,color = class) + facet_grid(drv~cyl)
qplot(displ,hwy,data=mpg ,color = class) + facet_wrap(drv~cyl)
qplot(displ,hwy,data=mpg ,color = class) + facet_grid(drv~cyl)
summary(iris)
qplot(Sepal.Length,Sepal.Width, data = iris, color = Species)
qplot(Sepal.Length,Sepal.Width, data = iris, color = Species)+ facet_grid(Petal.Length~Petal.Width)
qplot(displ,hwy,data=mpg ,color = class, geom = 'smooth') + facet_grid(drv~cyl)
qplot(displ,hwy,data=mpg ,color = class, geom = 'smooth')
qplot(displ,hwy,data=mpg ,color = class, geom = 'smooth') + facet_grid(class)
qplot(displ,hwy,data=mpg ,color = class, geom = 'smooth') + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = 'smooth', geom= 'point') + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = 'point', ) + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = 'smooth', ) + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = 'smooth' ) + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = ('point','smooth') ) + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = c('point','smooth') ) + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = c('point','boxplot') ) + facet_grid(class~.)
qplot(displ,hwy,data=mpg ,color = class, geom = c('point','boxplot') )# + facet_grid(class~.)
qplot(class,hwy,data=mpg ,color = class, geom = c('point','boxplot') )# + facet_grid(class~.)
qplot(reorder(class,hwy),class,hwy,data=mpg ,color = class, geom = c('point','boxplot') )# + facet_grid(class~.)
qplot(class,hwy,data=mpg ,color = class, geom = c('point','boxplot') )# + facet_grid(class~.)
qplot(class,hwy,data=mpg ,color = class,reorder(class,hwy), geom = c('point','boxplot') )# + facet_grid(class~.)
qplot(class,hwy,data=mpg ,color = class,reorder(hwy,class), geom = c('point','boxplot') )# + facet_grid(class~.)
qplot(class,hwy,data=mpg ,color = class,reorder(hwy,class), geom = 'boxplot' )# + facet_grid(class~.)
qplot(class,hwy,data=mpg ,color = class,reorder(mpg$hwy,mpg$class), geom = 'boxplot' )# + facet_grid(class~.)
qplot(class,hwy,data=mpg ,color = class, geom = 'boxplot' )# + facet_grid(class~.)
?reorder
qplot(reorder(hwy, FUN = median),class,hwy,data=mpg ,color = class, geom = 'boxplot' )# + facet_grid(class~.)
qplot(reorder(class,hwy, FUN = median),hwy,data=mpg ,color = class, geom = 'boxplot' )# + facet_grid(class~.)
qplot(reorder(class,hwy, FUN = mean),hwy,data=mpg ,color = class, geom = 'boxplot' )# + facet_grid(class~.)
qplot(reorder(class,hwy, FUN = sd),hwy,data=mpg ,color = class, geom = 'boxplot' )# + facet_grid(class~.)
qplot(reorder(class,-hwy, FUN = sd),hwy,data=mpg ,color = class, geom = 'boxplot' )# + facet_grid(class~.)
qplot(reorder(class,hwy, FUN = sd),hwy,data=mpg ,color = class, geom = 'boxplot' )# + facet_grid(class~.)
qplot(hwy,data=mpg,binwidth = 1)
qplot(hwy,data=mpg,binwidth = 2)
qplot(hwy,data=mpg,binwidth = 1)
qplot(carat, data = diamonds)
qplot(depth, data = diamonds)
qplot(depth, data = diamonds, binwidth = .1)
qplot(depth, data = diamonds, binwidth = .2)
qplot(depth, data = diamonds, binwidth = .2,color = cut)
qplot(depth, data = diamonds, binwidth = .2,fill = cut)
qplot(depth, data = diamonds, binwidth = .2,color = 'blue')
qplot(depth, data = diamonds, binwidth = .2,color = i('blue'))
qplot(depth, data = diamonds, binwidth = .2,color = I('blue'))
qplot(depth, data = diamonds, binwidth = .2,color = I('green'))
qplot(depth, data = diamonds, binwidth = .2,color = I('green'),fill = I('red'))
qplot(depth, data = diamonds, binwidth = .2,color = I('white'),fill = I('black'))
qplot(depth, data = diamonds, binwidth = .2,color = I('black'),fill = I('white'))
qplot(data = economics, aes(date,unemploy)) + geom_line()
economics
qplot(data = economics, aes(x=date,y=unemploy)) + geom_line()
names(economics)
summary(economics)
qplot(economics, x=date,y=unemploy)
qplot(data=economics, x=date,y=unemploy)
qplot(data=economics, x=date,y=unemploy) + geom_line()
getwd()
pl<-qplot(data=economics, x=date,y=unemploy) + geom_line()
ggsave('Desktop/plot.pdf', plot= pl)
summary(diamonds)
ggplot(data = diamonds, aes(x = color)) + geom_bar(color = cut)
ggplot(data = diamonds, x=color + geom_bar(color = cut)
ggplot(data = diamonds, x=color) + geom_bar(color = cut)
ggplot(data = diamonds, x=color) + geom_bar(color = cut)
qplot(x = color, data = diamonds)
qplot(x = color, data = diamonds, color = cut)
qplot(x = color, data = diamonds, color = cut, position = 'stack')
qplot(x = color, data = diamonds, color = cut, position = 'dodge')
qplot(x = color, data = diamonds, color = cut) + position_dodge()
ggplot(diamonds,aes(factor(color),fill = factor(cut))) + geom_bar(position='dodge')
ggplot(diamonds,aes(factor(color),fill = factor(cut))) + geom_bar(position='stack')
ggplot(diamonds,aes(factor(color),fill = factor(cut))) + geom_bar(position='identity')
ggplot(diamonds,aes(factor(color),fill = factor(cut))) + geom_bar(position='fill')
ggplot(diamonds,aes(factor(color),fill = factor(cut))) + geom_bar(position=c('fill','dodge'))
ggplot(diamonds,aes(factor(color),fill = factor(cut))) + geom_bar(position='dodge')
install.packages('plotly')
library(plotly)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity)), size = 4) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
(gg <- ggplotly(p))
(gg <- ggplotly(p))
gg
ggplotly(p)
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity))) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
ggplotly(p)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
library(ggplot2)
library(plotly)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
names(diamonds)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = depth)
grades<-c(98,49,83,96,99,81,89,87,94,76,65,78,91,82,82,100)
mean(grades)
sd(grades)
hist(grades)
grades2<-c(87,92,98,96,82,96,98,23,63,96,89,72,91,58,84,82,77)
mean(grades2)
sd(grades2)
hist(grades2)
grades<-c(98,49,83,96,99,81,89,87,94,76,65,78,91,82,82,100)
gradesam<-c(98,49,83,96,99,81,89,87,94,76,65,78,91,82,82,100)
mean(gradesam)
mean(gradespm)
gradespm<-c(87,92,98,96,82,96,98,23,63,96,89,72,91,58,84,82,77)
mean(gradespm)
median(gradesam)
sd(gradesam)
sd(gradesam)^2
am<-rep('am',16)
pm<-rep('pm',length(gradespm))
am<-rep('am',length(gradesam))
class<- rbind(am,pm)
class<- c(am,pm)
class
grades<- c(gradesam,gradespm)
midterm<-cbind(class,grades)
midterm
midterm<-as.data.frame(cbind(class,grades))
midterm
ggplot(data=midterm,aes(x=grades, colour=class)) +geom_density()
library(ggplot2)
ggplot(data=midterm,aes(x=grades, colour=class)) +geom_density()
ggplot(data=midterm,aes(x=grades, colour=class)) +geom_hist()
ggplot(data=midterm,aes(x=grades, colour=class)) +geom_histogram()
ggplot(data=midterm,aes(x=grade)) +geom_density()
ggplot(data=midterm,aes(x=grades)) +geom_density()
ggplot(data=midterm,aes(x=grades)) +stat_density()
ggplot(data=midterm,aes(x=grades)) +stat_density(aes(colour=class))
ggplot(data=midterm,aes(grades)) +stat_density(aes(colour=class))
ggplot(data=midterm,aes(grades)) +stat_histogram(aes(colour=class))
ggplot(data=midterm,aes(grades)) +geom_histogram(aes(colour=class))
midterm$grades<-as.numeric(midterm$grades)
ggplot(data=midterm,aes(grades)) +geom_histogram(aes(colour=class))
ggplot(data=midterm,aes(grades)) +geom_density(aes(colour=class))
ggplot(data=midterm,aes(grades)) +geom_density()
ggplot(data=midterm,aes(grades)) +geom_histogram()
midterm
gradesam<-c(98,49,83,96,99,81,89,87,94,76,65,78,91,82,82,100)
am<-rep('am',length(gradesam))
gradespm<-c(87,92,98,96,82,96,98,23,63,96,89,72,91,58,84,82,77)
pm<-rep('pm',length(gradespm))
class<- c(am,pm)
grades<- c(gradesam,gradespm)
grades
midterm<-as.data.frame(cbind(class,grades))
midterm
midterm$grades<-as.numeric(midterm$grades)
midterm
gradesam<-c(98,49,83,96,99,81,89,87,94,76,65,78,91,82,82,100)
mean(gradesam)
range(gradesam)
100-49
median(gradesam)
sd(gradesam)
histogram(gradesam)
histo(gradesam)
hist(gradesam)
gradespm<-c(87,92,98,96,82,96,98,23,63,96,89,72,91,58,84,82,77)
grades<-as.data.frame(gradespm)
grades
ggplot(grades,aes(x = gradespm)) + geom_density()
library(ggplot2)
ggplot(grades,aes(x = gradespm)) + geom_density()
grades<- as.data.frame(c(gradesam,gradespm))
ggplot(grades,aes(x = gradespm)) + geom_density()
grades<- c(gradesam,gradespm)
total <- as.data.frame(grades)
ggplot(data=total,aes(x=grades)) +geom_density()
x <- as.vector(rnorm(10000))
d <- as.data.frame(x=x)
library(ggplot2)
p <- ggplot(data = d) + theme_bw() +
geom_density(aes(x=x, y = ..density..), color = 'black')
# new code is below
q5 <- quantile(x,.05)
q95 <- quantile(x,.95)
medx <- median(x)
x.dens <- density(x)
df.dens <- data.frame(x = x.dens$x, y = x.dens$y)
p + geom_area(data = subset(df.dens, x >= q5 & x <= q95),
aes(x=x,y=y), fill = 'blue') +
geom_vline(xintercept = medx)
v <- ggplot(data = total) + theme_bw()+
geom_density(aes(x=grades, y = ..density..), color = 'black')
v
q5 <- quantile(grades,.05)
q95 <- quantile(grades,.95)
medx <- median(grades)
x.dens <- density(grades)
df.dens <- data.frame(x = x.dens$x, y = x.dens$y)
v+geom_area(data = subset(df.dens, x >= q5 & x <= q95),
aes(x=x,y=y), fill = 'blue') +
geom_vline(xintercept = medx)
q10 <- quantile(grades,.10)
q90 <- quantile(grades,.90)
medx <- median(grades)
x.dens <- density(grades)
df.dens <- data.frame(x = x.dens$x, y = x.dens$y)
v+geom_area(data = subset(df.dens, x >= q10 & x <= q90),
aes(x=x,y=y), fill = 'blue') +
geom_vline(xintercept = medx)
q125 <- quantile(grades,.125)
q875 <- quantile(grades,.875)
medx <- median(grades)
x.dens <- density(grades)
df.dens <- data.frame(x = x.dens$x, y = x.dens$y)
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = 'blue') +
geom_vline(xintercept = medx)
v+geom_area(data = subset(df.dens, x >= q5 & x <= q95),
aes(x=x,y=y), fill = 'blue') +
geom_vline(xintercept = medx)
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx)
ggplot(data=total,aes(x=grades)) +geom_density(aes(fill = '#ff0000'))
v <- ggplot(data = total) + theme_bw()+
geom_density(aes(x=grades, y = ..density..), color = 'black')
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx)
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx) +
geom_vline(xintercept = 84.275)
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx) +
geom_vline(xintercept = 84.275, aes(fill = '#ff0000'))
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx) +
geom_vline(xintercept = 84.275, aes(colour = '#ff0000'))
geom_vline(xintercept = 84.275, coulour = 'blue' aes(colour = '#ff0000'))
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx) +
geom_vline(xintercept = 84.275, coulour = 'blue' )
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx) +
geom_vline(xintercept = 84.275, aes(coulour = 'blue') )
v+geom_area(data = subset(df.dens, x >= q125 & x <= q875),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx)
q10 <- quantile(grades,.10)
q1 <- quantile(grades,1)
medx <- median(grades)
x.dens <- density(grades)
df.dens <- data.frame(x = x.dens$x, y = x.dens$y)
v+geom_area(data = subset(df.dens, x >= q10 & x <= q1),
aes(x=x,y=y), fill = '#00cc99') +
geom_vline(xintercept = medx)
gradespm<-c(87,92,98,96,82,96,98,23,63,96,89,72,91,58,84,82,77)
mean(gradespm)
median(gradespm)
sd(gradespm)
range(gradespm)
98-23
setwd(dir='Desktop/Spring 2016/Neander_Trauma/')
library(plyr)
# read in the data
df <- read.csv('Data/NEISS/sport_category_final.csv')
# create a contigency table
orig_table <- table(df$prod1,df$body_part)
# create a datafame from the contigency table (at least one that is intuitive)
tm<-as.data.frame.matrix(orig_table) # tm stands for table matrix
# create new columns based on body part combinations
head_neck <- tm$face + tm$neck + tm$head
shoulder_arm <- tm$`upper arm` + tm$`lower arm` + tm$shoulder + tm$elbow
hand <- tm$hand + tm$finger + tm$wrist
pelvis <- tm$`pubic region` + tm$hip # look up Berger femoral neck categorization and within the data
leg <- tm$knee + tm$`lower leg` + tm$`upper leg`
foot <- tm$foot + tm$toe + tm$ankle
trunk <- tm$`upper trunk` + tm$back
within(data = tm,
shoulder_arm = face + neck + head)
setwd(dir='Desktop/Spring 2016/Neander_Trauma/')
library(plyr)
# read in the data
df <- read.csv('Data/NEISS/sport_category_final.csv')
# create a contigency table
orig_table <- table(df$prod1,df$body_part)
# create a datafame from the contigency table (at least one that is intuitive)
tm<-as.data.frame.matrix(orig_table) # tm stands for table matrix
within(data = tm,
shoulder_arm = face + neck + head)
?within
with(data = tm,
shoulder_arm = face + neck + head)
with(tm,
shoulder_arm = face + neck + head)
install.packages('openintro')
library(openintro)
data("marioKart")
head(marioKart)
nrow(marioKart)
detatch(marioKart)
within(tm,{
head_neck = face + neck + head
})
within(tm,head_neck<-face+neck+head)
within(tm,{
head_neck<-face+neck+head
shoulder_arm <-`upper arm` + `lower arm` + shoulder + elbow
})
within(tm,{
head_neck<-face+neck+head
shoulder_arm <-`upper arm` + `lower arm` + shoulder + elbow
hand <- hand + finger + wrist
pelvis <- `pubic region` + hip
leg <- knee + `lower leg` + `upper leg`
foot <- foot + toe + ankle
trunk <- `upper trunk` + back
})
# create new columns based on body part combinations
head_neck <- tm$face + tm$neck + tm$head
shoulder_arm <- tm$`upper arm` + tm$`lower arm` + tm$shoulder + tm$elbow
hand <- tm$hand + tm$finger + tm$wrist
pelvis <- tm$`pubic region` + tm$hip # look up Berger femoral neck categorization and within the data
leg <- tm$knee + tm$`lower leg` + tm$`upper leg`
foot <- tm$foot + tm$toe + tm$ankle
trunk <- tm$`upper trunk` + tm$back
# combine columns into a new dataframe
final<-as.data.frame(cbind(head_neck,shoulder_arm,hand,pelvis,leg,foot,trunk))
rownames(final)<-rownames(tm) # index will be the activity name
# recreate data from Berger Trinkaus papers
neander_tot<-c(8,4,7,1,1,3,3)
nea_wo_djd<-c(7,4,7,1,0,3,1)
nea_wo_shan1<-c(6,4,5,1,1,3,1)
nea_wo_shan1_djd<-c(5,4,5,1,0,3,0)
# apply chi square for neander total and every sport
nt<-t(apply(final,1,function(x) {
new<- cbind(neander_tot,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value)}))
nwd<-t(apply(final,1,function(x) {
new<- cbind(nea_wo_djd,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value)}))
nws<-t(apply(final,1,function(x) {
new<- cbind(nea_wo_shan1,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value)}))
nwsd<-t(apply(final,1,function(x) {
new<- cbind(nea_wo_shan1_djd,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value)}))
nt<-as.data.frame(nt)
nwd<-as.data.frame(nwd)
nws<-as.data.frame(nws)
nwsd<-as.data.frame(nwsd)
#  find those activities that are similar to neanderthals
nt[nt$V2>.05,]
nwd[nwd$V2>.05,]
nwd<-t(apply(final,1,function(x) {
new<- cbind(nea_wo_djd,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value)}))
nwd
nwd["banisters"]
nwd["banisters",]
final
final['banisters']
final['banisters',]
chisq.test(c(7,4,7,1,0,3,1),c(2,13,9,0,0,4,6))
chisq.test(x=c(7,4,7,1,0,3,1),y=c(2,13,9,0,0,4,6))
nwd
nwd<-t(apply(final,1,function(x) {
new<- cbind(nea_wo_djd,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value, ch$df)}))
nwd
nwd<-t(apply(final,1,function(x) {
new<- cbind(nea_wo_djd,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value)}))
chisq.test(neander_tot,c(2, 13, 9, 0, 0, 4, 6))
x<-c(2, 13, 9, 0, 0, 4, 6)
frame<-rbind(nea_wo_djd,x)
frame
chisq.test(frame)
test<-chisq.test(frame)
text$expected
test$expected
# apply chi square for neander total and every sport
nt<-t(apply(final,1,function(x) {
new<- cbind(neander_tot,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value)}))
nwd<-t(apply(final,1,function(x) {
new<- cbind(nea_wo_djd,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value)}))
nws<-t(apply(final,1,function(x) {
new<- cbind(nea_wo_shan1,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value)}))
nwsd<-t(apply(final,1,function(x) {
new<- cbind(nea_wo_shan1_djd,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value)}))
is.nan(nwd)
nwd[is.nan(nwd),]
nwd[is.nan(nwd)]
nwd[,is.nan(nwd)]
nwd[is.nan(nwd)]
is.nan(names(nwd))
complete.cases(nwd)
nwd[complete.cases(nwd),]
nwd[-complete.cases(nwd),]
nwd[is.nan(nwd),]
nwd[is.nan(nwd)==FALSE,]
nwd[is.nan(nwd)==FALSE]
nwd[is.nan(nwd)==TRUE]
nt<-as.data.frame(nt,row.names = rownames(nt))
nt
nwd<-as.data.frame(nwd,row.names=row.names(nwd))
nws<-as.data.frame(nws,row.names=row.names(nws))
nt<-t(apply(final,1,function(x) {
new<- cbind(neander_tot,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value)}))
nwd<-t(apply(final,1,function(x) {
new<- cbind(nea_wo_djd,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value)}))
nws<-t(apply(final,1,function(x) {
new<- cbind(nea_wo_shan1,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value)}))
nwsd<-t(apply(final,1,function(x) {
new<- cbind(nea_wo_shan1_djd,x)
ch <- chisq.test(new)
c(unname(ch$statistic), ch$p.value)}))
nt<-as.data.frame(nt,row.names = rownames(nt))
nwd<-as.data.frame(nwd,row.names=rownames(nwd))
nws<-as.data.frame(nws,row.names=rownames(nws))
nwsd<-as.data.frame(nwsd,row.names = rownames(nwsd))
nwsd
nwsd[is.nan(nwsd),]
nwsd[is.nan(nwsd)]
nwsd[is.nan(nwsd$V1)]
nwsd[is.nan(nwsd$V1),]
nt[is.nan(nt$V1),]
nwd[is.nan(nwd$V1),]
nws[is.nan(nws$V1),]
nt[nt$V2>.05,]
final['loading docks']
final['loading docks',]
final['bleachers',]
nt<-na.omit(nt)
nt<-na.omit(nt)
nwd<-na.omit(nwd)
nws<-na.omit(nws)
nwsd<-na.omit(nwsd)
nwd
nwd[nwd$V2>.05,]
nws[nt$V2>.05,]
nwsd[nwd$V2>.05,]
nwsd<-na.omit(nwsd)
nwsd[nwd$V2>.05,]
nwsd
nwd[nwd$V2>.05,]
nws[nt$V2>.05,]
nwsd[nwd$V2>.05,]
